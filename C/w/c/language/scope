<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Scope - cppreference.com</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.21.2" />
<link rel="alternate" type="application/x-wiki" title="Edit" href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit" />
<link rel="edit" title="Edit" href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit" />
<link rel="shortcut icon" href="http://en.cppreference.com/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://en.cppreference.com/mwiki/opensearch_desc.php" title="cppreference.com (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.cppreference.com/mwiki/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="http://en.cppreference.com/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.ColiruCompiler%7Cext.rtlcite%7Cmediawiki.legacy.commonPrint%2Cshared%7Cskins.cppreference2&amp;only=styles&amp;skin=cppreference2&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=cppreference2&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>

<script src="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=cppreference2&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"c/language/scope","wgTitle":"c/language/scope","wgCurRevisionId":83310,"wgArticleId":13746,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"c/language/scope","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":0,"showtoolbar":1,"skin":"cppreference2","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"gadget-ColiruCompiler":1});;},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});;},{},{});
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-js:7:ca03345b1e2c4d90a25d968753a73b92 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #0000dd;}
.c.source-c .kw2 {color: #0000ff;}
.c.source-c .kw3 {color: #0000dd;}
.c.source-c .kw4 {color: #0000ff;}
.c.source-c .co1 {color: #909090;}
.c.source-c .co2 {color: #339900;}
.c.source-c .coMULTI {color: #ff0000; font-style: italic;}
.c.source-c .es0 {color: #008000; font-weight: bold;}
.c.source-c .es1 {color: #008000; font-weight: bold;}
.c.source-c .es2 {color: #008000; font-weight: bold;}
.c.source-c .es3 {color: #008000; font-weight: bold;}
.c.source-c .es4 {color: #008000; font-weight: bold;}
.c.source-c .es5 {color: #008000; font-weight: bold;}
.c.source-c .br0 {color: #008000;}
.c.source-c .sy0 {color: #008000;}
.c.source-c .sy1 {color: #000080;}
.c.source-c .sy2 {color: #000040;}
.c.source-c .sy3 {color: #000040;}
.c.source-c .sy4 {color: #008080;}
.c.source-c .st0 {color: #008000;}
.c.source-c .nu0 {color: #000080;}
.c.source-c .nu6 {color:#000080;}
.c.source-c .nu8 {color:#000080;}
.c.source-c .nu12 {color:#000080;}
.c.source-c .nu16 {color:#000080;}
.c.source-c .nu17 {color:#000080;}
.c.source-c .nu18 {color:#000080;}
.c.source-c .nu19 {color:#000080;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-c_language_scope skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        <div id="mw-head" class="noprint">
            <div id="cpp-head-first-base">
                <div id="cpp-head-first">
                    <h5><a href="http://en.cppreference.com/">
                        cppreference.com                        </a></h5>
                    <div id="cpp-head-search">
                        
<!-- 0 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://en.cppreference.com/mwiki/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<div id="simpleSearch">
						<input name="search" title="Search cppreference.com [f]" accesskey="f" id="searchInput" />						<button type="submit" name="button" title="Search the pages for this text" id="searchButton"><img src="http://en.cppreference.com/mwiki/skins/cppreference2/images/search-ltr.png?303" alt="Search" /></button>					</div>
			</form>
</div>

<!-- /0 -->
                    </div>
                    <div id="cpp-head-personal">
                        
<!-- 0 -->
<div id="p-personal" class="">
<span id="pt-createaccount"><a href="http://en.cppreference.com/mwiki/index.php?title=Special:UserLogin&amp;returnto=c%2Flanguage%2Fscope&amp;type=signup">Create account</a></span>	<div class="menu">
        <ul>
<li id="pt-login"><a href="http://en.cppreference.com/mwiki/index.php?title=Special:UserLogin&amp;returnto=c%2Flanguage%2Fscope" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>        </ul>
    </div>
</div>

<!-- /0 -->
                    </div>

                </div>
            </div>
            <div id="cpp-head-second-base">
                <div id="cpp-head-second">
                    <div id="cpp-head-tools-left">
                        
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="scope"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="../../Talk:c/language/scope"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="scope#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
                    </div>
                    <div id="cpp-head-tools-right">
                        
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="scope" >View</a></span></li>
					<li id="ca-edit"><span><a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit"  title="You can edit this page. Please use the preview button before saving [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">History</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="scope#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
                    </div>
                </div>
            </div>
        </div>
        <!-- /header -->
        <!-- content -->
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->
                <h1 id="firstHeading" class="firstHeading">Scope</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    <div id="siteSub">From cppreference.com</div>
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    <div id="contentSub"><span class="subpages">&lt; <a href="../../c.1" title="c">c</a>&lrm; | <a href="../language.1" title="c/language">language</a></span></div>
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="t-navbar" style=""><div class="t-navbar-sep">&#160;</div><div class="t-navbar-head"><a href="../../c.1" title="c"> C</a><div class="t-navbar-menu"><div><div><table class="t-nv-begin" cellpadding="0" style="line-height:1.1em;">
<tr class="t-nv"><td colspan="5"> <a href="../language.1" title="c/language"> Language</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../header" title="c/header"> Headers</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../types.1" title="c/types"> Type support</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../memory.1" title="c/memory"> Dynamic memory management</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../error.1" title="c/error"> Error handling</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../program.1" title="c/program"> Program utilities</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../variadic.1" title="c/variadic"> Variadic function support</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../chrono.1" title="c/chrono"> Date and time utilities</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../string.1" title="c/string"> Strings library</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../algorithm.1" title="c/algorithm"> Algorithms</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../numeric.1" title="c/numeric"> Numerics</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../io.1" title="c/io"> Input/output support</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../locale.1" title="c/locale"> Localization support</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../thread.1" title="c/thread"> Thread support</a> <span class="t-mark-rev t-since-c11">(C11)</span> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="../atomic.1" title="c/atomic"> Atomic operations</a> <span class="t-mark-rev t-since-c11">(C11)</span> </td></tr>
<tr class="t-nv"><td colspan="5"><div class="t-nv-ln-table"><div><a href="../experimental.1" title="c/experimental"><span class="t-lines"><span>Technical Specifications</span></span></a></div></div></td></tr>
</table></div><div><span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="http://en.cppreference.com/mwiki/index.php?title=Template:c/navbar_content&amp;action=edit">&#91;edit&#93;</a></span></div></div></div></div><div class="t-navbar-sep">&#160;</div><div class="t-navbar-head"><a href="../language.1" title="c/language"> C language</a></div><div class="t-navbar-sep">&#160;</div><div class="t-navbar-head"><a href="basic_concepts" title="c/language/basic concepts"> Basic Concepts</a><div class="t-navbar-menu"><div><div style="display:inline-block">
<div><table class="t-nv-begin" cellpadding="0" style="">
<tr class="t-nv"><td colspan="5"> <a href="../comment" title="c/comment"> comments</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="ascii" title="c/language/ascii"> ASCII</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="translation_phases" title="c/language/translation phases"> Translation phases</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="identifier" title="c/language/identifier">identifier</a></td></tr>
<tr class="t-nv"><td colspan="5"> <strong class="selflink">scope</strong></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="lifetime" title="c/language/lifetime">lifetime</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="name_space" title="c/language/name space">lookup and name spaces</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="type" title="c/language/type">type</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="arithmetic_types" title="c/language/arithmetic types">arithmetic types</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="main_function" title="c/language/main function">the main() function</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="memory_model" title="c/language/memory model">memory model and data races</a></td></tr>
</table></div>
</div><div><span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="http://en.cppreference.com/mwiki/index.php?title=Template:c/language/basics/navbar_content&amp;action=edit">&#91;edit&#93;</a></span></div></div></div></div><div class="t-navbar-sep">&#160;</div></div>
<p>Each <a href="identifier" title="c/language/identifier">identifier</a> that appears in a C program is <i>visible</i> (that is, may be used) only in some possibly discontiguous portion of the source code called its <i>scope</i>.
</p><p>Within a scope, an identifier may designate more than one entity only if the entities are in different <a href="name_space" title="c/language/name space">name spaces</a>.
</p><p>C has four kinds of scopes: 
</p>
<dl><dd><ul><li> block scope
</li><li> file scope
</li><li> function scope
</li><li> function prototype scope
</li></ul>
</dd></dl>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="scope#Nested_scopes"><span class="tocnumber">1</span> <span class="toctext">Nested scopes</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="scope#Block_scope"><span class="tocnumber">2</span> <span class="toctext">Block scope</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="scope#File_scope"><span class="tocnumber">3</span> <span class="toctext">File scope</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="scope#Function_scope"><span class="tocnumber">4</span> <span class="toctext">Function scope</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="scope#Function_prototype_scope"><span class="tocnumber">5</span> <span class="toctext">Function prototype scope</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="scope#Point_of_declaration"><span class="tocnumber">6</span> <span class="toctext">Point of declaration</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="scope#Notes"><span class="tocnumber">7</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="scope#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="scope#See_also"><span class="tocnumber">9</span> <span class="toctext">See also</span></a></li>
</ul>
</td></tr></table>
<h3><span class="editsection">[<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit&amp;section=1" title="Edit section: Nested scopes">edit</a>]</span> <span class="mw-headline" id="Nested_scopes">Nested scopes</span></h3>
<p>If two different entities named by the same identifier are in scope at the same time, and they belong to the same <a href="name_space" title="c/language/name space">name space</a>, the scopes are nested (no other form of scope overlap is allowed), and the declaration that appears in the inner scope hides the declaration that appears in the outer scope:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="co1">// The name space here is ordinary identifiers.</span>
&#160;
<span class="kw4">int</span> a<span class="sy4">;</span>   <span class="co1">// file scope of name a begins here</span>
&#160;
<span class="kw4">void</span> f<span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw4">int</span> a <span class="sy1">=</span> <span class="nu0">1</span><span class="sy4">;</span> <span class="co1">// the block scope of the name a begins here; hides file-scope a</span>
    <span class="br0">&#123;</span>
      <span class="kw4">int</span> a <span class="sy1">=</span> <span class="nu0">2</span><span class="sy4">;</span>         <span class="co1">// the scope of the inner a begins here, outer a is hidden</span>
      <a href="../io/fprintf"><span class="kw851">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;%d<span class="es1">\n</span>&quot;</span>, a<span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// inner a is in scope, prints 2</span>
    <span class="br0">&#125;</span>                    <span class="co1">// the block scope of the inner a ends here</span>
    <a href="../io/fprintf"><span class="kw851">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;%d<span class="es1">\n</span>&quot;</span>, a<span class="br0">&#41;</span><span class="sy4">;</span>   <span class="co1">// the outer a is in scope, prints 1</span>
<span class="br0">&#125;</span>                        <span class="co1">// the scope of the outer a ends here</span>
&#160;
<span class="kw4">void</span> g<span class="br0">&#40;</span><span class="kw4">int</span> a<span class="br0">&#41;</span><span class="sy4">;</span>   <span class="co1">// name a has function prototype scope; hides file-scope a</span></pre></div></div>
<h3><span class="editsection">[<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit&amp;section=2" title="Edit section: Block scope">edit</a>]</span> <span class="mw-headline" id="Block_scope">Block scope</span></h3>
<p>The scope of any identifier declared inside a <a href="statements#Compound_statements" title="c/language/statements">compound statement</a>, including function bodies, <span class="t-rev-inl t-since-c99"><span>or in any expression, declaration, or statement appearing in <a href="if" title="c/language/if">if</a>, <a href="switch" title="c/language/switch">switch</a>, <a href="for" title="c/language/for">for</a>, <a href="while" title="c/language/while">while</a>, or <a href="do" title="c/language/do">do-while</a> statement</span> <span><span class="t-mark-rev t-since-c99">(since C99)</span></span></span>, or within the parameter list of a <a href="function_definition" title="c/language/function definition">function definition</a> begins at the point of declaration and ends at the end of the block or statement in which it was declared.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">void</span> f<span class="br0">&#40;</span><span class="kw4">int</span> n<span class="br0">&#41;</span>  <span class="co1">// scope of the function parameter 'n' begins</span>
<span class="br0">&#123;</span>         <span class="co1">// the body of the function begins</span>
   <span class="sy2">++</span>n<span class="sy4">;</span>   <span class="co1">// 'n' is in scope and refers to the function parameter</span>
<span class="co1">// int n = 2; // error: cannot redeclare identifier in the same scope</span>
   <span class="kw1">for</span><span class="br0">&#40;</span><span class="kw4">int</span> n <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> n<span class="sy1">&lt;</span><span class="nu0">10</span><span class="sy4">;</span> <span class="sy2">++</span>n<span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="co1">// scope of loop-local 'n' begins</span>
       <a href="../io/fprintf"><span class="kw851">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;%d<span class="es1">\n</span>&quot;</span>, n<span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// prints 0 1 2 3 4 5 6 7 8 9</span>
   <span class="br0">&#125;</span> <span class="co1">// scope of the loop-local 'n' ends</span>
     <span class="co1">// the function parameter 'n' is back in scope</span>
   <a href="../io/fprintf"><span class="kw851">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;%d<span class="es1">\n</span>&quot;</span>, n<span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// prints the value of the parameter</span>
<span class="br0">&#125;</span> <span class="co1">// scope of function parameter 'n' ends</span>
<span class="kw4">int</span> a <span class="sy1">=</span> n<span class="sy4">;</span> <span class="co1">// Error: name 'n' is not in scope</span></pre></div></div>
 <table class="t-rev-begin">
<tr class="t-rev t-since-c99"><td>
<p>Until C99, selection and iteration statements did not establish their own block scopes (although if a compound statement was used in the statement, it had its usual block scope):
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw2">enum</span> <span class="br0">&#123;</span>a, b<span class="br0">&#125;</span><span class="sy4">;</span>
<span class="kw4">int</span> different<span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw1">if</span> <span class="br0">&#40;</span><span class="kw4">sizeof</span><span class="br0">&#40;</span><span class="kw2">enum</span> <span class="br0">&#123;</span>b, a<span class="br0">&#125;</span><span class="br0">&#41;</span> <span class="sy3">!</span><span class="sy1">=</span> <span class="kw4">sizeof</span><span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
        <span class="kw1">return</span> a<span class="sy4">;</span> <span class="co1">// a == 1</span>
    <span class="kw1">return</span> b<span class="sy4">;</span> <span class="co1">// b == 0 in C89, b == 1 in C99</span>
<span class="br0">&#125;</span></pre></div></div>
</td>
<td><span class="t-mark-rev t-since-c99">(since C99)</span></td></tr>
</table>
<p>Block-scope variables have <a href="storage_duration" title="c/language/storage duration">no linkage</a> and <a href="storage_duration" title="c/language/storage duration">automatic storage duration</a> by default. Note that storage duration for non-VLA local variables begins when the block is entered, but until the declaration is seen, the 
variable is not in scope and cannot be accessed.
</p>
<h3><span class="editsection">[<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit&amp;section=3" title="Edit section: File scope">edit</a>]</span> <span class="mw-headline" id="File_scope">File scope</span></h3>
<p>The scope of any identifier declared outside of any block or parameter list begins at the point of declaration and ends at the end of the translation unit.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">int</span> i<span class="sy4">;</span> <span class="co1">// scope of i begins</span>
<span class="kw4">static</span> <span class="kw4">int</span> g<span class="br0">&#40;</span><span class="kw4">int</span> a<span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="kw1">return</span> a<span class="sy4">;</span> <span class="br0">&#125;</span> <span class="co1">// scope of g begins (note, &quot;a&quot; has block scope)</span>
<span class="kw4">int</span> main<span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    i <span class="sy1">=</span> g<span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// i and g are in scope</span>
<span class="br0">&#125;</span></pre></div></div>
<p>File-scope identifiers have <a href="storage_duration" title="c/language/storage duration">external linkage</a> and <a href="storage_duration" title="c/language/storage duration">static storage duration</a> by default.
</p>
<h3><span class="editsection">[<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit&amp;section=4" title="Edit section: Function scope">edit</a>]</span> <span class="mw-headline" id="Function_scope">Function scope</span></h3>
<p>A <a href="statements#Labels" title="c/language/statements">label (and only a label)</a> declared inside a function is in scope everywhere in that function, in all nested blocks, before and after its own declaration. Note: a label is declared implicitly, by using an otherwise unused identifier before the colon character before any statement.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">void</span> f<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
   <span class="br0">&#123;</span>   
       <span class="kw1">goto</span> label<span class="sy4">;</span> <span class="co1">// label in scope even though declared later</span>
label<span class="sy4">:;</span>
   <span class="br0">&#125;</span>
   <span class="kw1">goto</span> label<span class="sy4">;</span> <span class="co1">// label ignores block scope</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">void</span> g<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw1">goto</span> label<span class="sy4">;</span> <span class="co1">// error: label not in scope in g()</span>
<span class="br0">&#125;</span></pre></div></div>
<h3><span class="editsection">[<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit&amp;section=5" title="Edit section: Function prototype scope">edit</a>]</span> <span class="mw-headline" id="Function_prototype_scope">Function prototype scope</span></h3>
<p>The scope of a name introduced in the parameter list of a <a href="function_declaration" title="c/language/function declaration">function declaration</a> that is not a definition ends at the end of the function <a href="declarations" title="c/language/declarations">declarator</a>.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">int</span> f<span class="br0">&#40;</span><span class="kw4">int</span> n,
      <span class="kw4">int</span> a<span class="br0">&#91;</span>n<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// n is in scope and refers to the first parameter</span></pre></div></div>
<p>Note that if there are multiple or nested declarators in the declaration, the scope ends at the end of the nearest enclosing function declarator:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">void</span> f <span class="br0">&#40;</span> <span class="co1">// function name 'f' is at file scope</span>
 <span class="kw4">long</span> <span class="kw4">double</span> f,            <span class="co1">// the identifier 'f' is now in scope, file-scope 'f' is hidden</span>
 <span class="kw4">char</span> <span class="br0">&#40;</span><span class="sy2">**</span>a<span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">10</span> <span class="sy2">*</span> <span class="kw4">sizeof</span> f<span class="br0">&#93;</span> <span class="co1">// 'f' refers to the first parameter, which is in scope</span>
<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
<span class="kw2">enum</span><span class="br0">&#123;</span> n <span class="sy1">=</span> <span class="nu0">3</span> <span class="br0">&#125;</span><span class="sy4">;</span>
<span class="kw4">int</span> <span class="br0">&#40;</span><span class="sy2">*</span><span class="br0">&#40;</span><span class="sy2">*</span>g<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="kw4">int</span> n<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#91;</span>n<span class="br0">&#93;</span><span class="sy4">;</span> <span class="co1">// the scope of the function parameter 'n'</span>
                       <span class="co1">// ends at the end of its function declarator</span>
                       <span class="co1">// in the array declarator, global n is in scope</span>
<span class="co1">// (this declares a pointer to function returning a pointer to an array of 3 int)</span></pre></div></div>
<h3><span class="editsection">[<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit&amp;section=6" title="Edit section: Point of declaration">edit</a>]</span> <span class="mw-headline" id="Point_of_declaration">Point of declaration</span></h3>
<p>The scope of structure, union, and enumeration tags begins immediately after the appearance of the tag in a type specifier that declares the tag.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw1">struct</span> Node <span class="br0">&#123;</span>
   <span class="kw1">struct</span> Node<span class="sy2">*</span> next<span class="sy4">;</span> <span class="co1">// Node is in scope and refers to this struct</span>
<span class="br0">&#125;</span><span class="sy4">;</span></pre></div></div>
<p>The scope of enumeration constant begins immediately after the appearance of its defining enumerator in an enumerator list.
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw2">enum</span> <span class="br0">&#123;</span> x <span class="sy1">=</span> <span class="nu0">12</span> <span class="br0">&#125;</span><span class="sy4">;</span>
<span class="br0">&#123;</span>
    <span class="kw2">enum</span> <span class="br0">&#123;</span> x <span class="sy1">=</span> x <span class="sy2">+</span> <span class="nu0">1</span>, <span class="co1">// new x is not in scope until the comma, x is initialized to 13</span>
           y <span class="sy1">=</span> x <span class="sy2">+</span> <span class="nu0">1</span>  <span class="co1">// the new enumerator x is now in scope, y is initialized to 14</span>
         <span class="br0">&#125;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>The scope of any other identifier begins just after the end of its declarator and before the initializer, if any:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw4">int</span> x <span class="sy1">=</span> <span class="nu0">2</span><span class="sy4">;</span> <span class="co1">// scope of the first 'x' begins</span>
<span class="br0">&#123;</span>
    <span class="kw4">int</span> x<span class="br0">&#91;</span>x<span class="br0">&#93;</span><span class="sy4">;</span> <span class="co1">// scope of the newly declared x begins after the declarator (x[x]).</span>
              <span class="co1">// Within the declarator, the outer 'x' is still in scope.</span>
              <span class="co1">// This declares a VLA array of 2 int.</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">unsigned</span> <span class="kw4">char</span> x <span class="sy1">=</span> <span class="nu0">32</span><span class="sy4">;</span> <span class="co1">// scope of the outer 'x' begins</span>
<span class="br0">&#123;</span>
    <span class="kw4">unsigned</span> <span class="kw4">char</span> x <span class="sy1">=</span> x<span class="sy4">;</span>
            <span class="co1">// scope of the inner 'x' begins before the initializer (= x)</span>
            <span class="co1">// this does not initialize the inner 'x' with the value 32, </span>
            <span class="co1">// this initializes the inner 'x' with its own, indeterminate, value</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">unsigned</span> <span class="kw4">long</span> factorial<span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">long</span> n<span class="br0">&#41;</span>
<span class="co1">// declarator ends, 'factorial' is in scope from this point</span>
<span class="br0">&#123;</span>
   <span class="kw1">return</span> n<span class="sy1">&lt;</span><span class="nu0">2</span> <span class="sy4">?</span> <span class="nu0">1</span> <span class="sy4">:</span> n<span class="sy2">*</span>factorial<span class="br0">&#40;</span>n<span class="sy2">-</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// recursive call</span>
<span class="br0">&#125;</span></pre></div></div>
<p>As a special case, the scope of a <a href="type" title="c/language/type">type name</a> that is not a declaration of an identifier is considered to begin just after the place within the type name where the identifier would appear were it not omitted.
</p>
<h3><span class="editsection">[<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit&amp;section=7" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline" id="Notes">Notes</span></h3>
<p>Prior to C89, identifiers with external linkage had file scope even when introduced within a block, and because of that, a C89 compiler is not required to diagnose the use of an extern identifier that has gone out of scope (such use is undefined behavior).
</p><p>Local variables within a loop body can hide variables declared in the init clause of a <a href="for" title="c/language/for">for</a> loop in C (their scope is nested), but cannot do that in C++.
</p><p>Unlike C++, C has no struct scope: names declared within a struct/union/enum declaration are in the same scope as the struct declaration (except that data members are in their own <a href="name_space" title="c/language/name space">member name space</a>):
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="c source-c"><pre class="de1"><span class="kw1">struct</span> foo <span class="br0">&#123;</span>
    <span class="kw1">struct</span> baz <span class="br0">&#123;</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="kw2">enum</span> color <span class="br0">&#123;</span>RED, BLUE<span class="br0">&#125;</span><span class="sy4">;</span>
<span class="br0">&#125;</span><span class="sy4">;</span>
<span class="kw1">struct</span> baz b<span class="sy4">;</span> <span class="co1">// baz is in scope</span>
<span class="kw2">enum</span> color x <span class="sy1">=</span> RED<span class="sy4">;</span> <span class="co1">// color and RED are in scope</span></pre></div></div>
<h3><span class="editsection">[<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit&amp;section=8" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h3>
<div class="t-ref-std-11">
<ul><li> C11 standard (ISO/IEC 9899:2011): 
</li></ul>
<dl><dd><ul><li> 6.2.1 Scopes of identifiers (p: 35-36)
</li></ul>
</dd></dl>
<div class="t-ref-std-c99">
<ul><li> C99 standard (ISO/IEC 9899:1999): 
</li></ul>
<dl><dd><ul><li> 6.2.1 Scopes of identifiers (p: 29-30)
</li></ul>
</dd></dl>
<div class="t-ref-std-c89">
<ul><li> C89/C90 standard (ISO/IEC 9899:1990): 
</li></ul>
<dl><dd><ul><li> 3.1.2.1 Scopes of identifiers 
</li></ul>
</dd></dl>
</div>
<h3><span class="editsection">[<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=edit&amp;section=9" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h3>
<table class="t-dsc-begin">

<tr class="t-dsc">
<td colspan="2"> <div class="t-dsc-see"><span><a href="http://en.cppreference.com/w/cpp/language/scope" title="cpp/language/scope">C++ documentation</a></span> for <span class="t-dsc-see-tt"><span>Scope</span></span></div>
</td></tr>

</table></div>
</div>

<!-- 
NewPP limit report
Preprocessor visited node count: 1092/1000000
Preprocessor generated node count: 4202/1000000
Post‐expand include size: 24493/2097152 bytes
Template argument size: 6868/2097152 bytes
Highest expansion depth: 13/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:13746-0!*!0!!en!*!* and timestamp 20170615164953 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;oldid=83310">http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;oldid=83310</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id='catlinks' class='catlinks catlinks-allhidden'></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        <div id="cpp-footer-base" class="noprint">
            <div id="footer">
                        <div id="cpp-navigation">
            <h5>Navigation</h5>
            <ul>
<li id="n-Support-us"><a href="http://www.cppreference.com/support" rel="nofollow">Support us</a></li><li id="n-recentchanges"><a href="../../Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-FAQ"><a href="../../Cppreference:FAQ">FAQ</a></li><li id="n-Offline-version"><a href="../../Cppreference:Archives">Offline version</a></li>            </ul>
        </div>
                        <div id="cpp-toolbox">
            <h5><span>Toolbox</span><a href="scope#"></a></h5>
            <ul>
<li id="t-whatlinkshere"><a href="../../Special:WhatLinksHere/c/language/scope" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="../../Special:RecentChangesLinked/c/language/scope" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="http://upload.cppreference.com/w/Special:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="../../Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-print"><a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li><li id="t-permalink"><a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;oldid=83310" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="http://en.cppreference.com/mwiki/index.php?title=c/language/scope&amp;action=info">Page information</a></li>            </ul>
        </div>
                        <div id="cpp-languages">
            <div><ul><li>In other languages</li></ul></div>
            <div><ul>
<li class="interwiki-ar"><a href="http://ar.cppreference.com/w/c/language/scope" title="c/language/scope" lang="ar" hreflang="ar">العربية</a></li><li class="interwiki-cs"><a href="http://cs.cppreference.com/w/c/language/scope" title="c/language/scope" lang="cs" hreflang="cs">Česky</a></li><li class="interwiki-de"><a href="http://de.cppreference.com/w/c/language/scope" title="c/language/scope" lang="de" hreflang="de">Deutsch</a></li><li class="interwiki-es"><a href="http://es.cppreference.com/w/c/language/scope" title="c/language/scope" lang="es" hreflang="es">Español</a></li><li class="interwiki-fr"><a href="http://fr.cppreference.com/w/c/language/scope" title="c/language/scope" lang="fr" hreflang="fr">Français</a></li><li class="interwiki-it"><a href="http://it.cppreference.com/w/c/language/scope" title="c/language/scope" lang="it" hreflang="it">Italiano</a></li><li class="interwiki-ja"><a href="http://ja.cppreference.com/w/c/language/scope" title="c/language/scope" lang="ja" hreflang="ja">日本語</a></li><li class="interwiki-ko"><a href="http://ko.cppreference.com/w/c/language/scope" title="c/language/scope" lang="ko" hreflang="ko">한국어</a></li><li class="interwiki-pl"><a href="http://pl.cppreference.com/w/c/language/scope" title="c/language/scope" lang="pl" hreflang="pl">Polski</a></li><li class="interwiki-pt"><a href="http://pt.cppreference.com/w/c/language/scope" title="c/language/scope" lang="pt" hreflang="pt">Português</a></li><li class="interwiki-ru"><a href="http://ru.cppreference.com/w/c/language/scope" title="c/language/scope" lang="ru" hreflang="ru">Русский</a></li><li class="interwiki-tr"><a href="http://tr.cppreference.com/w/c/language/scope" title="c/language/scope" lang="tr" hreflang="tr">Türkçe</a></li><li class="interwiki-zh"><a href="http://zh.cppreference.com/w/c/language/scope" title="c/language/scope" lang="zh" hreflang="zh">中文</a></li>            </ul></div>
        </div>
            <ul id="footer-info">
                                    <li id="footer-info-lastmod"> This page was last modified on 31 January 2016, at 06:19.</li>
                                    <li id="footer-info-viewcount">This page has been accessed 8,728 times.</li>
                            </ul>
                    <ul id="footer-places">
                                    <li id="footer-places-privacy"><a href="../../Cppreference:Privacy_policy" title="Cppreference:Privacy policy">Privacy policy</a></li>
                                    <li id="footer-places-about"><a href="../../Cppreference:FAQ" title="Cppreference:About">About cppreference.com</a></li>
                                    <li id="footer-places-disclaimer"><a href="../../Cppreference:General_disclaimer" title="Cppreference:General disclaimer">Disclaimers</a></li>
                            </ul>
                                    <ul id="footer-icons" class="noprint">
                                    <li id="footer-poweredbyico">
                                            <a href="http://www.mediawiki.org/"><img src="http://en.cppreference.com/mwiki/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>                                            <a href="http://qbnz.com/highlighter/"><img src="http://upload.cppreference.com/mwiki/images/2/2b/powered_by_geshi_88x31.png" alt="Powered by GeSHi" height="31" width="88" /></a>                                            <a href="http://www.tigertech.net/referral/cppreference.com"><img src="http://upload.cppreference.com/mwiki/images/9/94/powered_by_tigertech_88x31.png" alt="Hosted by Tiger Technologies" height="31" width="88" /></a>                                        </li>
                                </ul>
                        <div style="clear:both">
            </div>
            </div>
        </div>
        <!-- /footer -->
        <script>if(window.mw){
mw.loader.state({"site":"loading","user":"missing","user.groups":"ready"});
}</script>
<script src="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=skins.cppreference2&amp;only=scripts&amp;skin=cppreference2&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.page.ready","mediawiki.searchSuggest","mediawiki.hidpi","ext.gadget.ColiruCompiler"], null, true);
}</script>
<script src="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=cppreference2&amp;*"></script>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-2828341-1']);
_gaq.push(['_setDomainName', 'cppreference.com']);
_gaq.push(['_trackPageview']);
</script><!-- Served in 1.020 secs. -->
	</body>
<!-- Cached 20170615164953 -->
</html>
