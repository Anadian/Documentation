<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Destructors - cppreference.com</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.21.2" />
<link rel="alternate" type="application/x-wiki" title="Edit" href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit" />
<link rel="edit" title="Edit" href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/mwiki/opensearch_desc.php" title="cppreference.com (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.cppreference.com/mwiki/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="cppreference.com Atom feed" href="/mwiki/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.ColiruCompiler%2CMathJax%7Cext.rtlcite%7Cmediawiki.legacy.commonPrint%2Cshared%7Cskins.cppreference2&amp;only=styles&amp;skin=cppreference2&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=cppreference2&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}#toc{display:none}.editsection{display:none}
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-css:7:472787eddcf4605d11de8c7ef047234f */</style>

<script src="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=cppreference2&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"cpp/language/destructor","wgTitle":"cpp/language/destructor","wgCurRevisionId":89287,"wgArticleId":6540,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"cpp/language/destructor","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":0,"showtoolbar":1,"skin":"cppreference2","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"gadget-ColiruCompiler":1,"gadget-MathJax":1});;},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});;},{},{});
/* cache key: mwiki1-mwiki_en_:resourceloader:filter:minify-js:7:9f05c6caceb9bb1a482b6cebd4c5a330 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000dd;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #909090;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #008000; font-weight: bold;}
.cpp.source-cpp .es1 {color: #008000; font-weight: bold;}
.cpp.source-cpp .es2 {color: #008000; font-weight: bold;}
.cpp.source-cpp .es3 {color: #008000; font-weight: bold;}
.cpp.source-cpp .es4 {color: #008000; font-weight: bold;}
.cpp.source-cpp .es5 {color: #008000; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #008000;}
.cpp.source-cpp .nu0 {color: #000080;}
.cpp.source-cpp .nu6 {color: #000080;}
.cpp.source-cpp .nu8 {color: #000080;}
.cpp.source-cpp .nu12 {color: #000080;}
.cpp.source-cpp .nu16 {color:#000080;}
.cpp.source-cpp .nu17 {color:#000080;}
.cpp.source-cpp .nu18 {color:#000080;}
.cpp.source-cpp .nu19 {color:#000080;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/mwiki/skins/cppreference2/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-cpp_language_destructor skin-cppreference2 action-view cpp-navbar">
        <!-- header -->
        <div id="mw-head" class="noprint">
            <div id="cpp-head-first-base">
                <div id="cpp-head-first">
                    <h5><a href="/">
                        cppreference.com                        </a></h5>
                    <div id="cpp-head-search">
                        
<!-- 0 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="/mwiki/index.php" id="searchform">
		<input type='hidden' name="title" value="Special:Search"/>
				<div id="simpleSearch">
						<input name="search" title="Search cppreference.com [f]" accesskey="f" id="searchInput" />						<button type="submit" name="button" title="Search the pages for this text" id="searchButton"><img src="/mwiki/skins/cppreference2/images/search-ltr.png?303" alt="Search" /></button>					</div>
			</form>
</div>

<!-- /0 -->
                    </div>
                    <div id="cpp-head-personal">
                        
<!-- 0 -->
<div id="p-personal" class="">
<span id="pt-createaccount"><a href="/mwiki/index.php?title=Special:UserLogin&amp;returnto=cpp%2Flanguage%2Fdestructor&amp;type=signup">Create account</a></span>	<div class="menu">
        <ul>
<li id="pt-login"><a href="/mwiki/index.php?title=Special:UserLogin&amp;returnto=cpp%2Flanguage%2Fdestructor" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>        </ul>
    </div>
</div>

<!-- /0 -->
                    </div>

                </div>
            </div>
            <div id="cpp-head-second-base">
                <div id="cpp-head-second">
                    <div id="cpp-head-tools-left">
                        
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/w/cpp/language/destructor"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="/w/Talk:cpp/language/destructor"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
		<h5><span>Variants</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
                    </div>
                    <div id="cpp-head-tools-right">
                        
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/w/cpp/language/destructor" >View</a></span></li>
					<li id="ca-edit"><span><a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit"  title="You can edit this page. Please use the preview button before saving [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">History</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
                    </div>
                </div>
            </div>
        </div>
        <!-- /header -->
        <!-- content -->
        <div id="cpp-content-base">
            <div id="content">
                <a id="top"></a>
                <div id="mw-js-message" style="display:none;"></div>
                                <!-- firstHeading -->
                <h1 id="firstHeading" class="firstHeading">Destructors</h1>
                <!-- /firstHeading -->
                <!-- bodyContent -->
                <div id="bodyContent">
                                        <!-- tagline -->
                    <div id="siteSub">From cppreference.com</div>
                    <!-- /tagline -->
                                        <!-- subtitle -->
                    <div id="contentSub"><span class="subpages">&lt; <a href="/w/cpp" title="cpp">cpp</a>&lrm; | <a href="/w/cpp/language" title="cpp/language">language</a></span></div>
                    <!-- /subtitle -->
                                                            <!-- bodycontent -->
                    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="t-navbar" style=""><div class="t-navbar-sep">&#160;</div><div class="t-navbar-head"><a href="/w/cpp" title="cpp"> C++</a><div class="t-navbar-menu"><div><div><table class="t-nv-begin" cellpadding="0" style="line-height:1.1em;">
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language" title="cpp/language"> Language</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/header" title="cpp/header"> Standard library headers</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/concept" title="cpp/concept"> Concepts</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/utility" title="cpp/utility"> Utilities library</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/string" title="cpp/string"> Strings library</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/container" title="cpp/container"> Containers library</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/algorithm" title="cpp/algorithm"> Algorithms library</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/iterator" title="cpp/iterator"> Iterators library</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/numeric" title="cpp/numeric"> Numerics library</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/io" title="cpp/io"> Input/output library</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/locale" title="cpp/locale"> Localizations library</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/regex" title="cpp/regex"> Regular expressions library</a> <span class="t-mark-rev t-since-cxx11">(C++11)</span> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/atomic" title="cpp/atomic"> Atomic operations library</a> <span class="t-mark-rev t-since-cxx11">(C++11)</span> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/thread" title="cpp/thread"> Thread support library</a> <span class="t-mark-rev t-since-cxx11">(C++11)</span> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/filesystem" title="cpp/filesystem"> Filesystem library</a> <span class="t-mark-rev t-since-cxx17">(C++17)</span> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/experimental" title="cpp/experimental"> Technical Specifications</a> </td></tr>
</table></div><div><span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="http://en.cppreference.com/mwiki/index.php?title=Template:cpp/navbar_content&amp;action=edit">&#91;edit&#93;</a></span></div></div></div></div><div class="t-navbar-sep">&#160;</div><div class="t-navbar-head"><a href="/w/cpp/language" title="cpp/language"> C++ language</a></div><div class="t-navbar-sep">&#160;</div><div class="t-navbar-head"><a href="/w/cpp/language/classes" title="cpp/language/classes"> Classes</a><div class="t-navbar-menu"><div><div style="display:inline-block">
<div><table class="t-nv-begin" cellpadding="0" style="">
<tr class="t-nv-h2"><td colspan="5"> General </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/classes" title="cpp/language/classes"> overview</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/class" title="cpp/language/class"> class/struct types</a> </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/union" title="cpp/language/union"> union types</a> </td></tr>
<tr class="t-nv-h2"><td colspan="5"> Members </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/data_members" title="cpp/language/data members">data members</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/static" title="cpp/language/static">static members</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/this" title="cpp/language/this">the <code>this</code> pointer</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/nested_classes" title="cpp/language/nested classes" class="mw-redirect">nested classes</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/member_template" title="cpp/language/member template">member templates</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/bit_field" title="cpp/language/bit field">bit fields</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/using_declaration" title="cpp/language/using declaration">using-declarations</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/member_functions" title="cpp/language/member functions">member functions</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/access" title="cpp/language/access">member access specifiers</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/initializer_list" title="cpp/language/initializer list">constructors and member initializer lists</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/data_members#Member_initialization" title="cpp/language/data members">default member initializer</a><span class="t-mark-rev t-since-cxx11">(C++11)</span></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/friend" title="cpp/language/friend"><code>friend</code> specifier</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/explicit" title="cpp/language/explicit"><code>explicit</code> specifier</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/converting_constructor" title="cpp/language/converting constructor">converting constructor</a></td></tr>
<tr class="t-nv-h2"><td colspan="5"> Special member functions </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/default_constructor" title="cpp/language/default constructor">default constructor</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/copy_constructor" title="cpp/language/copy constructor">copy constructor</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/move_constructor" title="cpp/language/move constructor">move constructor</a><span class="t-mark-rev t-since-cxx11">(C++11)</span></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/copy_assignment" title="cpp/language/copy assignment">copy assignment operator</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/move_assignment" title="cpp/language/move assignment">move assignment operator</a><span class="t-mark-rev t-since-cxx11">(C++11)</span></td></tr>
<tr class="t-nv"><td colspan="5"> <strong class="selflink">destructor</strong></td></tr>
<tr class="t-nv-h2"><td colspan="5"> Inheritance </td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/derived_class" title="cpp/language/derived class">base and derived classes</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/virtual" title="cpp/language/virtual">virtual member functions</a></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/override" title="cpp/language/override">override</a><span class="t-mark-rev t-since-cxx11">(C++11)</span></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/final" title="cpp/language/final">final</a><span class="t-mark-rev t-since-cxx11">(C++11)</span></td></tr>
<tr class="t-nv"><td colspan="5"> <a href="/w/cpp/language/abstract_class" title="cpp/language/abstract class">pure virtual functions and abstract classes</a></td></tr>
</table></div>
</div><div><span class="editsection noprint plainlinks" title="Edit this template"><a rel="nofollow" class="external text" href="http://en.cppreference.com/mwiki/index.php?title=Template:cpp/language/classes/navbar_content&amp;action=edit">&#91;edit&#93;</a></span></div></div></div></div><div class="t-navbar-sep">&#160;</div></div>
<p>A destructor is a special <a href="/w/cpp/language/member_functions" title="cpp/language/member functions">member function</a> that is called when the <a href="/w/cpp/language/lifetime" title="cpp/language/lifetime">lifetime of an object</a> ends. The purpose of the destructor is to free the resources that the object may have acquired during its lifetime.
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Syntax"><span class="tocnumber">1</span> <span class="toctext">Syntax</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Explanation"><span class="tocnumber">2</span> <span class="toctext">Explanation</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Implicitly-declared_destructor"><span class="tocnumber">3</span> <span class="toctext">Implicitly-declared destructor</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Deleted_implicitly-declared_destructor"><span class="tocnumber">4</span> <span class="toctext">Deleted implicitly-declared destructor</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Trivial_destructor"><span class="tocnumber">5</span> <span class="toctext">Trivial destructor</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Implicitly-defined_destructor"><span class="tocnumber">6</span> <span class="toctext">Implicitly-defined destructor</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Destruction_sequence"><span class="tocnumber">7</span> <span class="toctext">Destruction sequence</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Virtual_destructors"><span class="tocnumber">8</span> <span class="toctext">Virtual destructors</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Pure_virtual_destructors"><span class="tocnumber">9</span> <span class="toctext">Pure virtual destructors</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Exceptions"><span class="tocnumber">10</span> <span class="toctext">Exceptions</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#Example"><span class="tocnumber">11</span> <span class="toctext">Example</span></a></li>
</ul>
</td></tr></table>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=1" title="Edit section: Syntax">edit</a>]</span> <span class="mw-headline" id="Syntax">Syntax</span></h3>
<table class="t-sdsc-begin">

<tr>
<td colspan="10" class="t-sdsc-sep">
</td></tr>
<tr class="t-sdsc">
<td> <code><b>~</b></code> <span class="t-spar">class_name</span> <code><b>();</b></code>
</td>
<td> (1)
</td>
<td class="t-sdsc-nopad">
</td></tr>



<tr>
<td colspan="10" class="t-sdsc-sep">
</td></tr>
<tr class="t-sdsc">
<td> <code><b>virtual</b></code> <code><b>~</b></code> <span class="t-spar">class_name</span> <code><b>();</b></code>
</td>
<td> (2)
</td>
<td class="t-sdsc-nopad">
</td></tr>



<tr>
<td colspan="10" class="t-sdsc-sep">
</td></tr>
<tr class="t-sdsc">
<td> <span class="t-spar">decl-specifier-seq</span><span class="t-mark">(optional)</span> <code><b>~</b></code> <span class="t-spar">class_name</span> <code><b>() = default;</b></code>
</td>
<td> (3)
</td>
<td> <span class="t-mark-rev t-since-cxx11">(since C++11)</span>
</td></tr>



<tr>
<td colspan="10" class="t-sdsc-sep">
</td></tr>
<tr class="t-sdsc">
<td> <span class="t-spar">decl-specifier-seq</span><span class="t-mark">(optional)</span> <code><b>~</b></code> <span class="t-spar">class_name</span> <code><b>() = delete;</b></code>
</td>
<td> (4)
</td>
<td> <span class="t-mark-rev t-since-cxx11">(since C++11)</span>
</td></tr>



<tr>
<td colspan="10" class="t-sdsc-sep">
</td></tr>
<tr class="t-sdsc">
<td> <span class="t-spar">attr</span><span class="t-mark">(optional)</span> <span class="t-spar">decl-specifier-seq</span><span class="t-mark">(optional)</span> <span class="t-spar">id-expression</span> <code><b>(</b></code> <code><b>void</b></code><span class="t-mark">(optional)</span> <code><b>)</b></code> <span class="t-spar">except</span><span class="t-mark">(optional)</span> <span class="t-spar">attr</span><span class="t-mark">(optional)</span> <code><b>;</b></code>
</td>
<td> (5)
</td>
<td class="t-sdsc-nopad">
</td></tr>



<tr>
<td colspan="10" class="t-sdsc-sep">
</td></tr></table>
<div class="t-li1"><span class="t-li">1)</span> Typical declaration of a destructor</div>
<div class="t-li1"><span class="t-li">2)</span> Virtual destructor is usually required in a base class</div>
<div class="t-li1"><span class="t-li">3)</span> Forcing a destructor to be generated by the compiler</div>
<div class="t-li1"><span class="t-li">4)</span> Disabling the implicit destructor</div>
<div class="t-li1"><span class="t-li">5)</span> Formal syntax of a destructor declaration</div>
<table class="t-par-begin">


<tr class="t-par">
<td>  <span class="t-spar">decl-specifier-seq</span>
</td>
<td> -
</td>
<td>  <code>friend</code>, <code>inline</code>, <code>virtual</code>, or nothing (no return type)
</td></tr>
<tr class="t-par">
<td>  <span class="t-spar">id-expression</span>
</td>
<td> -
</td>
<td>  within a class definition, the symbol <code><b>~</b></code> followed by the class name. Within a class template, the symbol <code><b>~</b></code> followed by the name of the current instantiation of the template. At namespace scope or in a <a href="/w/cpp/language/friend" title="cpp/language/friend">friend</a> declaration within a different class, <i>nested-name-specifier</i> followed by the symbol <code><b>~</b></code> followed by the class name which is the same class as the one named by the nested-name-specifier.  In any case, the name must be the actual name of the class or template, and not a typedef. The entire id-expression may be surrounded by parentheses which do not change its meaning.
</td></tr>
<tr class="t-par">
<td>  <span class="t-spar">attr</span><span class="t-mark-rev t-since-cxx11">(C++11)</span>
</td>
<td> -
</td>
<td>  optional sequence of any number of <a href="/w/cpp/language/attributes" title="cpp/language/attributes">attributes</a>
</td></tr>
<tr class="t-par">
<td>  <span class="t-spar">except</span>
</td>
<td> -
</td>
<td>  exception specification as in any function declaration (either <a href="/w/cpp/language/except_spec" title="cpp/language/except spec">dynamic exception specification</a><span class="t-mark">(deprecated)</span> or <a href="/w/cpp/language/noexcept_spec" title="cpp/language/noexcept spec">noexcept specification</a><span class="t-mark-rev t-since-cxx11">(C++11)</span>)
 <table class="t-rev-begin">
<tr class="t-rev t-since-cxx11"><td>
<p>Except that if no exception specification is explicitly provided, the exception specification is considered to be one that would be used by the implicitly-declared destructor (see below). In most cases, this is <span class="t-c"><span class="mw-geshi cpp source-cpp"><span class="kw1">noexcept</span><span class="br0">&#40;</span><span class="kw2">true</span><span class="br0">&#41;</span></span></span>. Thus a throwing destructor must be explicitly declared <span class="t-c"><span class="mw-geshi cpp source-cpp"><span class="kw1">noexcept</span><span class="br0">&#40;</span><span class="kw2">false</span><span class="br0">&#41;</span></span></span>.
</p>
</td>
<td><span class="t-mark-rev t-since-cxx11">(since C++11)</span></td></tr>
</table>
<p><br />
</p>
</td></tr></table>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=2" title="Edit section: Explanation">edit</a>]</span> <span class="mw-headline" id="Explanation">Explanation</span></h3>
<p>The destructor is called whenever an object's <a href="/w/cpp/language/lifetime" title="cpp/language/lifetime">lifetime</a> ends, which includes 
</p>
<ul><li> <a href="/w/cpp/utility/program/exit" title="cpp/utility/program/exit">program termination</a>, for objects with static <a href="/w/cpp/language/storage_duration" title="cpp/language/storage duration">storage duration</a>
</li></ul>
 <table class="t-rev-begin">
<tr class="t-rev t-since-cxx11"><td>
<ul><li> thread exit, for objects with thread-local storage duration
</li></ul>
</td>
<td><span class="t-mark-rev t-since-cxx11">(since C++11)</span></td></tr></table>
<ul><li> end of scope, for objects with automatic storage duration and for temporaries whose life was extended by binding to a reference
</li><li> <a href="/w/cpp/language/delete" title="cpp/language/delete">delete-expression</a>, for objects with dynamic storage duration
</li><li> end of the full <a href="/w/cpp/language/expressions" title="cpp/language/expressions">expression</a>, for nameless temporaries
</li><li> <a href="/w/cpp/language/throw" title="cpp/language/throw">stack unwinding</a>, for objects with automatic storage duration when an exception escapes their block, uncaught.
</li></ul>
<p>The destructor may also be called directly, e.g. to destroy an object that was constructed using <a href="/w/cpp/language/new" title="cpp/language/new">placement-new</a> or through an allocator member function such as <a href="/w/cpp/memory/allocator/destroy" title="cpp/memory/allocator/destroy">std::allocator::destroy()</a>, to destroy an object that was constructed through the allocator. Note that calling a destructor directly for an ordinary object, such as a local variable, invokes undefined behavior when the destructor is called again, at the end of scope.
</p><p>In generic contexts, the destructor call syntax can be used with an object of non-class type; this is known as pseudo-destructor call: see <a href="/w/cpp/language/operator_member_access#Built-in_member_access_operators" title="cpp/language/operator member access">member access operator</a>.
</p>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=3" title="Edit section: Implicitly-declared destructor">edit</a>]</span> <span class="mw-headline" id="Implicitly-declared_destructor">Implicitly-declared destructor</span></h3>
<p>If no user-declared destructor is provided for a <a href="/w/cpp/language/class" title="cpp/language/class">class type</a> (<span class="t-c"><span class="mw-geshi cpp source-cpp"><span class="kw1">struct</span></span></span>, <span class="t-c"><span class="mw-geshi cpp source-cpp"><span class="kw1">class</span></span></span>, or <span class="t-c"><span class="mw-geshi cpp source-cpp"><span class="kw1">union</span></span></span>), the compiler will always declare a destructor as an <code>inline public</code> member of its class.
</p><p>As with any implicitly-declared special member function, the exception specification of the implicitly-declared destructor is non-throwing unless <span class="t-rev-inl t-since-cxx17"><span>the destructor of any potentially-constructed base or member is <a href="/w/cpp/language/noexcept_spec" title="cpp/language/noexcept spec">potentially-throwing</a></span> <span><span class="t-mark-rev t-since-cxx17">(since C++17)</span></span></span><span class="t-rev-inl t-until-cxx17"><span>implicit definition would directly invoke a function with a different exception specification</span> <span><span class="t-mark-rev t-until-cxx17">(until C++17)</span></span></span>. In practice, implicit destructors are <code>noexcept</code> unless the class is "poisoned" by a base or member whose destructor is <code>noexcept(false)</code>.
</p>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=4" title="Edit section: Deleted implicitly-declared destructor">edit</a>]</span> <span class="mw-headline" id="Deleted_implicitly-declared_destructor">Deleted implicitly-declared destructor</span></h3>
<p>The implicitly-declared or defaulted destructor for class <code>T</code> is <span class="t-rev-inl t-until-cxx11"><span> undefined </span> <span><span class="t-mark-rev t-until-cxx11">(until C++11)</span></span></span><span class="t-rev-inl t-since-cxx11"><span>defined as <i>deleted</i></span> <span><span class="t-mark-rev t-since-cxx11">(since C++11)</span></span></span> if any of the following is true:
</p>
<ul><li> <code>T</code> has a non-static data member that cannot be destructed (has deleted or inaccessible destructor)
</li><li> <code>T</code> has direct or virtual base class that cannot be destructed (has deleted or inaccessible destructors)
</li></ul>
 <table class="t-rev-begin">
<tr class="t-rev t-since-cxx11"><td>
<ul><li> <code>T</code> is a union and has a variant member with non-trivial destructor.
</li></ul>
</td>
<td><span class="t-mark-rev t-since-cxx11">(since C++11)</span></td></tr>
</table>
<ul><li> The implicitly-declared destructor is virtual (because the base class has a virtual destructor) and the lookup for the deallocation function (<span class="t-c"><span class="mw-geshi cpp source-cpp"><a href="http://en.cppreference.com/w/cpp/memory/new/operator_delete"><span class="kw689">operator delete</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span></span></span> results in a call to ambiguous, deleted, or inaccessible function.
</li></ul>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=5" title="Edit section: Trivial destructor">edit</a>]</span> <span class="mw-headline" id="Trivial_destructor">Trivial destructor</span></h3>
<p>The destructor for class <code>T</code> is trivial if all of the following is true:
</p>
<ul><li> The destructor is not user-provided (meaning, it is either implicitly declared, or explicitly defined as defaulted on its first declaration)
</li><li> The destructor is not virtual (that is, the base class destructor is not virtual)
</li><li> All direct base classes have trivial destructors
</li><li> All non-static data members of class type (or array of class type) have trivial destructors
</li></ul>
<p>A trivial destructor is a destructor that performs no action. Objects with trivial destructors don't require a delete-expression and may be disposed of by simply deallocating their storage. All data types compatible with the C language (POD types) are trivially destructible.
</p>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=6" title="Edit section: Implicitly-defined destructor">edit</a>]</span> <span class="mw-headline" id="Implicitly-defined_destructor">Implicitly-defined destructor</span></h3>
<p>If an implicitly-declared destructor is not deleted, it is implicitly defined (that is, a function body is generated and compiled) by the compiler when it is <a href="/w/cpp/language/definition#ODR-use" title="cpp/language/definition">odr-used</a>. This implicitly-defined destructor has an empty body.
</p>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=7" title="Edit section: Destruction sequence">edit</a>]</span> <span class="mw-headline" id="Destruction_sequence">Destruction sequence</span></h3>
<p>For both user-defined or implicitly-defined destructors, after the body of the destructor is executed, the compiler calls the destructors for all non-static non-variant members of the class, in reverse order of declaration, then it calls the destructors of all direct non-virtual base classes in <a href="/w/cpp/language/initializer_list#Initialization_order" title="cpp/language/initializer list">reverse order of construction</a> (which in turn call the destructors of their members and their base classes, etc), and then, if this object is of most-derived class, it calls the destructors of all virtual bases.
</p><p>Even when the destructor is called directly (e.g. <span class="t-c"><span class="mw-geshi cpp source-cpp">obj.~Foo<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span></span></span>), the return statement in <span class="t-c"><span class="mw-geshi cpp source-cpp">~Foo<span class="br0">&#40;</span><span class="br0">&#41;</span></span></span> does not return control to the caller immediately: it calls all those member and base destructors first.
</p>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=8" title="Edit section: Virtual destructors">edit</a>]</span> <span class="mw-headline" id="Virtual_destructors">Virtual destructors</span></h3>
<p>Deleting an object through pointer to base invokes undefined behavior unless the destructor in the base class is <a href="/w/cpp/language/virtual" title="cpp/language/virtual">virtual</a>:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="cpp source-cpp"><pre class="de1"><span class="kw1">class</span> Base <span class="br0">&#123;</span>
 <span class="kw1">public</span><span class="sy4">:</span>
    <span class="kw1">virtual</span> ~Base<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="sy4">;</span>
<span class="kw1">class</span> Derived <span class="sy4">:</span> <span class="kw1">public</span> Base <span class="br0">&#123;</span><span class="br0">&#125;</span><span class="sy4">;</span>
Base<span class="sy2">*</span> b <span class="sy1">=</span> new Derived<span class="sy4">;</span>
delete b<span class="sy4">;</span> <span class="co1">// safe</span></pre></div></div>
<p>A common guideline is that a destructor for a base class must be <a rel="nofollow" class="external text" href="http://www.gotw.ca/publications/mill18.htm">either public and virtual or protected and nonvirtual</a>
</p>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=9" title="Edit section: Pure virtual destructors">edit</a>]</span> <span class="mw-headline" id="Pure_virtual_destructors">Pure virtual destructors</span></h3>
<p>A destructor may be declared <a href="/w/cpp/language/abstract_class" title="cpp/language/abstract class">pure virtual</a>, for example in a base class which needs to be made abstract, but has no other suitable functions that could be declared pure virtual. Such destructor must have a definition, since all base class destructors are always called when the derived class is destroyed:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="cpp source-cpp"><pre class="de1"><span class="kw1">class</span> AbstractBase <span class="br0">&#123;</span>
 <span class="kw1">public</span><span class="sy4">:</span>
    <span class="kw1">virtual</span> ~AbstractBase<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
<span class="br0">&#125;</span><span class="sy4">;</span>
AbstractBase<span class="sy4">::</span>~AbstractBase<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><span class="br0">&#125;</span>
<span class="kw1">class</span> Derived <span class="sy4">:</span> <span class="kw1">public</span> AbstractBase <span class="br0">&#123;</span><span class="br0">&#125;</span><span class="sy4">;</span>
<span class="co1">// AbstractBase obj;   // compiler error</span>
Derived obj<span class="sy4">;</span>           <span class="co1">// OK</span></pre></div></div>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=10" title="Edit section: Exceptions">edit</a>]</span> <span class="mw-headline" id="Exceptions">Exceptions</span></h3>
<p>As any other function, a destructor may terminate by throwing an <a href="/w/cpp/language/exceptions" title="cpp/language/exceptions">exception</a> <span class="t-rev-inl t-since-cxx11"><span>(this usually requires it to be explicitly declared <span class="t-c"><span class="mw-geshi cpp source-cpp"><span class="kw1">noexcept</span><span class="br0">&#40;</span><span class="kw2">false</span><span class="br0">&#41;</span></span></span>)</span> <span><span class="t-mark-rev t-since-cxx11">(since C++11)</span></span></span>, however if this destructor happens to be called during <a href="/w/cpp/language/throw" title="cpp/language/throw">stack unwinding</a>, <span class="t-lc"><a href="/w/cpp/error/terminate" title="cpp/error/terminate">std::terminate</a></span> is called instead.
</p><p>Although <span class="t-lc"><a href="/w/cpp/error/uncaught_exception" title="cpp/error/uncaught exception">std::uncaught_exception</a></span> may sometimes be used to detect stack unwinding in progress, it is generally considered bad practice to allow any destructor to terminate by throwing an exception. This functionality is nevertheless used by some libraries, such as  <a rel="nofollow" class="external text" href="https://github.com/SOCI/soci">SOCI</a> and <a rel="nofollow" class="external text" href="http://galeracluster.com/downloads/">Galera 3</a>, which rely on the ability of the destructors of nameless temporaries to throw exceptions at the end of the full expression that constructs the temporary.
</p>
<h3><span class="editsection">[<a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=edit&amp;section=11" title="Edit section: Example">edit</a>]</span> <span class="mw-headline" id="Example">Example</span></h3>
<div class="t-example"><div class="t-example-live-link"><div class="coliru-btn coliru-btn-run-init">Run this code</div></div>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="cpp source-cpp"><pre class="de1"><span class="co2">#include &lt;iostream&gt;</span>
&#160;
<span class="kw1">struct</span> A
<span class="br0">&#123;</span>
    <span class="kw4">int</span> i<span class="sy4">;</span>
&#160;
    A <span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="br0">&#41;</span> <span class="sy4">:</span> i <span class="br0">&#40;</span> i <span class="br0">&#41;</span> <span class="br0">&#123;</span><span class="br0">&#125;</span>
&#160;
    ~A<span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        <a href="http://en.cppreference.com/w/cpp/io/cout"><span class="kw1758">std::<span class="me2">cout</span></span></a> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;~a&quot;</span> <span class="sy1">&lt;&lt;</span> i <span class="sy1">&lt;&lt;</span> <a href="http://en.cppreference.com/w/cpp/io/manip/endl"><span class="kw1791">std::<span class="me2">endl</span></span></a><span class="sy4">;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="sy4">;</span>
&#160;
<span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    A a1<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
    A<span class="sy2">*</span> p<span class="sy4">;</span>
&#160;
    <span class="br0">&#123;</span> <span class="co1">// nested scope</span>
        A a2<span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span><span class="sy4">;</span>
        p <span class="sy1">=</span> new A<span class="br0">&#40;</span><span class="nu0">3</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span> <span class="co1">// a2 out of scope</span>
&#160;
    delete p<span class="sy4">;</span> <span class="co1">// calls the destructor of a3</span>
<span class="br0">&#125;</span></pre></div></div>
<p>Output:
</p>
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="text source-text"><pre class="de1">~a2
~a3
~a1</pre></div></div> 
</div>

<!-- 
NewPP limit report
Preprocessor visited node count: 2082/1000000
Preprocessor generated node count: 5458/1000000
Post‐expand include size: 50250/2097152 bytes
Template argument size: 11606/2097152 bytes
Highest expansion depth: 13/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mwiki1-mwiki_en_:pcache:idhash:6540-0!*!0!!en!*!* and timestamp 20170714205029 -->
</div>                    <!-- /bodycontent -->
                                        <!-- printfooter -->
                    <div class="printfooter">
                    Retrieved from "<a href="http://en.cppreference.com/mwiki/index.php?title=cpp/language/destructor&amp;oldid=89287">http://en.cppreference.com/mwiki/index.php?title=cpp/language/destructor&amp;oldid=89287</a>"                    </div>
                    <!-- /printfooter -->
                                                            <!-- catlinks -->
                    <div id='catlinks' class='catlinks catlinks-allhidden'></div>                    <!-- /catlinks -->
                                                            <div class="visualClear"></div>
                    <!-- debughtml -->
                                        <!-- /debughtml -->
                </div>
                <!-- /bodyContent -->
            </div>
        </div>
        <!-- /content -->
        <!-- footer -->
        <div id="cpp-footer-base" class="noprint">
            <div id="footer">
                        <div id="cpp-navigation">
            <h5>Navigation</h5>
            <ul>
<li id="n-Support-us"><a href="http://www.cppreference.com/support" rel="nofollow">Support us</a></li><li id="n-recentchanges"><a href="/w/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-FAQ"><a href="/w/Cppreference:FAQ">FAQ</a></li><li id="n-Offline-version"><a href="/w/Cppreference:Archives">Offline version</a></li>            </ul>
        </div>
                        <div id="cpp-toolbox">
            <h5><span>Toolbox</span><a href="#"></a></h5>
            <ul>
<li id="t-whatlinkshere"><a href="/w/Special:WhatLinksHere/cpp/language/destructor" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/w/Special:RecentChangesLinked/cpp/language/destructor" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="http://upload.cppreference.com/w/Special:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/w/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-print"><a href="/mwiki/index.php?title=cpp/language/destructor&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li><li id="t-permalink"><a href="/mwiki/index.php?title=cpp/language/destructor&amp;oldid=89287" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/mwiki/index.php?title=cpp/language/destructor&amp;action=info">Page information</a></li>            </ul>
        </div>
                        <div id="cpp-languages">
            <div><ul><li>In other languages</li></ul></div>
            <div><ul>
<li class="interwiki-de"><a href="http://de.cppreference.com/w/cpp/language/destructor" title="cpp/language/destructor" lang="de" hreflang="de">Deutsch</a></li><li class="interwiki-es"><a href="http://es.cppreference.com/w/cpp/language/destructor" title="cpp/language/destructor" lang="es" hreflang="es">Español</a></li><li class="interwiki-fr"><a href="http://fr.cppreference.com/w/cpp/language/destructor" title="cpp/language/destructor" lang="fr" hreflang="fr">Français</a></li><li class="interwiki-it"><a href="http://it.cppreference.com/w/cpp/language/destructor" title="cpp/language/destructor" lang="it" hreflang="it">Italiano</a></li><li class="interwiki-ja"><a href="http://ja.cppreference.com/w/cpp/language/destructor" title="cpp/language/destructor" lang="ja" hreflang="ja">日本語</a></li><li class="interwiki-pt"><a href="http://pt.cppreference.com/w/cpp/language/destructor" title="cpp/language/destructor" lang="pt" hreflang="pt">Português</a></li><li class="interwiki-ru"><a href="http://ru.cppreference.com/w/cpp/language/destructor" title="cpp/language/destructor" lang="ru" hreflang="ru">Русский</a></li><li class="interwiki-zh"><a href="http://zh.cppreference.com/w/cpp/language/destructor" title="cpp/language/destructor" lang="zh" hreflang="zh">中文</a></li>            </ul></div>
        </div>
            <ul id="footer-info">
                                    <li id="footer-info-lastmod"> This page was last modified on 16 January 2017, at 06:21.</li>
                                    <li id="footer-info-viewcount">This page has been accessed 237,273 times.</li>
                            </ul>
                    <ul id="footer-places">
                                    <li id="footer-places-privacy"><a href="/w/Cppreference:Privacy_policy" title="Cppreference:Privacy policy">Privacy policy</a></li>
                                    <li id="footer-places-about"><a href="/w/Cppreference:About" title="Cppreference:About">About cppreference.com</a></li>
                                    <li id="footer-places-disclaimer"><a href="/w/Cppreference:General_disclaimer" title="Cppreference:General disclaimer">Disclaimers</a></li>
                            </ul>
                                    <ul id="footer-icons" class="noprint">
                                    <li id="footer-poweredbyico">
                                            <a href="//www.mediawiki.org/"><img src="/mwiki/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>                                            <a href="http://qbnz.com/highlighter/"><img src="http://upload.cppreference.com/mwiki/images/2/2b/powered_by_geshi_88x31.png" alt="Powered by GeSHi" height="31" width="88" /></a>                                            <a href="http://www.tigertech.net/referral/cppreference.com"><img src="http://upload.cppreference.com/mwiki/images/9/94/powered_by_tigertech_88x31.png" alt="Hosted by Tiger Technologies" height="31" width="88" /></a>                                        </li>
                                </ul>
                        <div style="clear:both">
            </div>
            </div>
        </div>
        <!-- /footer -->
        <script>if(window.mw){
mw.loader.state({"site":"loading","user":"missing","user.groups":"ready"});
}</script>
<script src="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=skins.cppreference2&amp;only=scripts&amp;skin=cppreference2&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.page.ready","mediawiki.searchSuggest","mediawiki.hidpi","ext.gadget.ColiruCompiler","ext.gadget.MathJax"], null, true);
}</script>
<script src="http://en.cppreference.com/mwiki/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=cppreference2&amp;*"></script>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-2828341-1']);
_gaq.push(['_setDomainName', 'cppreference.com']);
_gaq.push(['_trackPageview']);
</script><!-- Served in 1.990 secs. -->
	</body>
<!-- Cached 20170714205029 -->
</html>
